py -m venv env #virtual env created
.\env\Scripts\activate #activated
deactivate #deactivated

#venv is not the only option available for creating virtual environments and other options exist such as pipenv which is another variation. 

However, in this course, the use of venv is recommended. 

 
 When installing Django globally or in a virtual environment, Python recommends using isolated environment libraries and other dependencies required for a particular application.

Python's standard library contains the venv module. 

It installs a command-line utility called Django-admin in the system path and is located in the scripts folder of your current Python environment.

As the name suggests, you use the django-admin utility to perform various administrative tasks. 

These tasks include creating the project and app, performing  migrations to generate database tables, whose structure matches data models, and running a development server

 Django project is a Python package containing the database configuration used by various sub-modules (Django calls them apps) and other Django-specific settings.
 django-admin startproject demoproject 

 The startproject is Django’s default project template. It creates the following file structure in the Python environment:

 The manage.py script inside the outer demoproject has the same role as the django-admin utility. 

You can use it to perform various administrative tasks. In that sense, it is a local copy of the django-admin utility.
python manage.py runserver

python makemigration 